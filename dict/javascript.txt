.MAX_VALUE
.MIN_VALUE
.NEGATIVE_INFINITY
.POSITIVE_INFINITY
.toString(n)
isNaN(number)
.anchor(name)
.big()
.blink()
.bold()
.charAt(index)
.charCodeAt(index)
.concat(string1,string2,...,stringN)
.fixed()
.fontcolor(color)
.fontsize(size)
.fromCharCode(num1,num2,...,numN)
.indexOf(search,start)
.italics()
.lastIndexOf(search,start)
.length
.link(url)
.match(searchvalue)
.replace(find,string)
.slice(start,end)
.small()
.split(separator, limit)
.strike()
.sub()
.substr(start,length)
.substring(start,end)
.sup()
.toLowerCase()
.toUpperCase()
.concat(array1,array2,......,arrayN)
.join(separator)
.length
.pop()
.push(element1,element2,...,elementN)
.reverse()
.shift()
.slice(start,end)
.sort(sortfunc)
.splice(index,count,element1,...,elementN)
.unshift(element1,element2,...,elementN)
.E
.LN10
.LN2
.LOG10E
.LOG2E
.PI
.SQRT1_2
.SQRT2
.abs(x)
.acos(x)
.asin(x)
.atan(x)
.ceil(x)
.cos(x)
.exp(x)
.floor(x)
.log(x)
.max(x,y)
.min(x,y)
.pow(x,y)
.random()
.round(x)
.sin(x)
.sqrt(x)
.atan2(x,y)
.tan(x)
.getDate()
.getDay()
.getFullYear()
.getHours()
.getMilliseconds()
.getMinutes()
.getMonth()
.getSeconds()
.getTime()
.getTimezoneOffset()
.getYear()
.parse(datestr)
.setDate(day)
.setFullYear(year,month,day)
.setHours(hour,min,sec,millisec)
.setMilliseconds(millisec)
.setMinutes(min,sec,millisec)
.setMonth(month,day)
.setSeconds(sec,millisec)
.setYear(year)
.toDateString()
.toLocaleDateString()
.toLocaleLowerCase()
.toLocaleTimeString()
.toLocaleUpperCase()
.toTimeString()
.prototype
.toSource()
.toString()
.$n
.index
.lastIndex
.lastMatch
.lastParen
.leftContext
.rightContext
.match(searchvalue)
decodeURI(string)
decodeURIComponent(URIstring)
encodeURI(string)
encodeURIComponent(string)
escape(string)
eval(string)
parseFloat(string)
parseInt(string, radix)
unescape(string)
globalThis
Infinity
NaN
undefined
eval()
isFinite()
isNaN()
parseFloat()
parseInt()
decodeURI()
decodeURIComponent()
encodeURI()
encodeURIComponent()
escape()
unescape()
Object
Function
Boolean
Symbol
Error
AggregateError
EvalError
RangeError
ReferenceError
SyntaxError
TypeError
URIError
InternalError
Number
BigInt
Math
Date
String
RegExp
Array
Int8Array
Uint8Array
Uint8ClampedArray
Int16Array
Uint16Array
Int32Array
Uint32Array
BigInt64Array
BigUint64Array
Float32Array
Float64Array
Map
Set
WeakMap
WeakSet
ArrayBuffer
SharedArrayBuffer
DataView
Atomics
JSON
WeakRef
FinalizationRegistry
Iterator
AsyncIterator
Promise
GeneratorFunction
AsyncGeneratorFunction
Generator
AsyncGenerator
AsyncFunction
Reflect
Proxy
Intl
Intl.Collator
Intl.DateTimeFormat
Intl.DisplayNames
Intl.DurationFormat
Intl.ListFormat
Intl.Locale
Intl.NumberFormat
Intl.PluralRules
Intl.RelativeTimeFormat
Intl.Segmenter
return
break
continue
throw
if
else
switch
try
catch
var
let
const
function
function*
async function
async function*
class
do
while
for
for await
while
debugger
export
import
with
this
[]
{}
function
class
function*
async function
async function*
/ab+c/i
`string`
?.
new
target
meta
super
import()
A++
A--
++A
--A
delete
void
typeof
+
-
~
!
await
**
*
/
%
+
-
<
>
<=
>=
instanceof
in
==
!=
===
!==
<<
>>
>>>
&
|
^
&&
||
??
condition
ifTrue
ifFalse
=
*=
/=
%=
+=
-=
<<=
>>=
>>>=
&=
^=
|=
**=
&&=
||=
??=
yield
yield*
